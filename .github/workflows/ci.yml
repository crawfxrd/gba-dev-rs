# SPDX-License-Identifier: CC0-1.0
# SPDX-FileCopyrightText: NONE

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ~/.rustup/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies
      run: |
        ./scripts/install-deps.sh
        ./scripts/install-rust.sh

    - run: cargo fetch --locked
    - run: cargo clippy -- -D warnings
      env:
        CARGO_NET_OFFLINE: 'true'

  doc:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ~/.rustup/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies
      run: |
        ./scripts/install-deps.sh
        ./scripts/install-rust.sh

    - run: cargo fetch --locked
    - run: cargo doc --workspace --no-deps

  fmt:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - run: cargo fmt --all --check

  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ~/.rustup/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies
      run: |
        ./scripts/install-deps.sh
        ./scripts/install-rust.sh

    - run: cargo fetch --locked
    - run: cargo build
      env:
        CARGO_NET_OFFLINE: 'true'
